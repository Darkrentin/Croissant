[gd_scene load_steps=14 format=3 uid="uid://uhnhsc4jvdgm"]

[ext_resource type="Script" uid="uid://ug8rmjlf4rth" path="res://scripts/Level3/Platform/MovePlatform.cs" id="1_xf3iu"]
[ext_resource type="Script" uid="uid://c3w2gq5l0udid" path="res://scripts/Level3/Platform/WindowPlatform.cs" id="2_oty2a"]
[ext_resource type="PackedScene" uid="uid://c86vhmqirheox" path="res://scenes/Level3/PlatformTexture.tscn" id="3_xf3iu"]
[ext_resource type="Shader" uid="uid://dykfihxbavdca" path="res://assets/shaders/Dithering.gdshader" id="5_oty2a"]
[ext_resource type="FontFile" uid="uid://dbsqfburxw1vf" path="res://assets/texts/fonts/RobotoMono-Bold.ttf" id="5_tir0a"]
[ext_resource type="AudioStream" uid="uid://bpl3lcwupi47m" path="res://assets/sounds/level_3/move_platform_select.mp3" id="6_tir0a"]
[ext_resource type="AudioStream" uid="uid://bl2c1m7sr748u" path="res://assets/sounds/level_3/move_platform_unselect.mp3" id="7_6o0bx"]
[ext_resource type="AudioStream" uid="uid://dqveouaj18rt1" path="res://assets/sounds/level_3/move_platform_move.mp3" id="8_1dogx"]

[sub_resource type="Shader" id="Shader_1ex6h"]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 color1: source_color = vec4(1.0, 0.0, 0.0, 1.0);  // First color
uniform vec4 color2: source_color = vec4(0.0, 0.0, 1.0, 1.0);  // Second color
uniform bool animate = true;  // Whether to animate the outline
uniform float direction: hint_range(-1.0, 1.0, 1.0) = -1.0;
uniform float frequency: hint_range(0.1, 100.0, 0.1) = 15.0;
uniform float speed: hint_range(0.1, 10, 0.1) = 3.0;
uniform float border_width = 10.0; // Border width in pixels
uniform vec2 window_size = vec2(800.0, 600.0); // Window size in pixels
uniform float Time = 0.0;

void fragment() {
    // Get UV-based position in pixels
    vec2 pixel_position = UV * window_size;

    // Calculate distance from each edge in pixels
    float distance_from_left = pixel_position.x;
    float distance_from_right = window_size.x - pixel_position.x;
    float distance_from_top = pixel_position.y;
    float distance_from_bottom = window_size.y - pixel_position.y;

    // Check if we're in the border area
    bool is_border =
        distance_from_left < border_width ||
        distance_from_right < border_width ||
        distance_from_top < border_width ||
        distance_from_bottom < border_width;

    // Calculate parameterized position along the perimeter (0.0 to 1.0)
    float perimeter = 2.0 * (window_size.x + window_size.y);
    float position_on_perimeter = 0.0;

    if (distance_from_top < border_width) {
        // Top border
        position_on_perimeter = pixel_position.x / perimeter;
    } else if (distance_from_right < border_width) {
        // Right border
        position_on_perimeter = (window_size.x + pixel_position.y) / perimeter;
    } else if (distance_from_bottom < border_width) {
        // Bottom border
        position_on_perimeter = (window_size.x + window_size.y + (window_size.x - pixel_position.x)) / perimeter;
    } else if (distance_from_left < border_width) {
        // Left border
        position_on_perimeter = (2.0 * window_size.x + window_size.y + (window_size.y - pixel_position.y)) / perimeter;
    }

    // Use Time directly - the speed is integrated in Platform.cs
    float time_offset = Time;

    // Create sharp transitions between colors using position along perimeter
    float pattern = step(0.5, fract((position_on_perimeter * frequency + time_offset * direction)));

    // Select color based on pattern
    vec4 outline_color = mix(color1, color2, pattern);

    // Apply color only to border
    COLOR = is_border ? outline_color : vec4(0.0, 0.0, 0.0, 0.0);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tir0a"]
resource_local_to_scene = true
shader = SubResource("Shader_1ex6h")
shader_parameter/color1 = Color(0, 1, 1, 1)
shader_parameter/color2 = Color(0, 0, 1, 0)
shader_parameter/animate = true
shader_parameter/direction = -1.0
shader_parameter/frequency = 32.0
shader_parameter/speed = 0.3
shader_parameter/border_width = 4.0
shader_parameter/window_size = Vector2(800, 600)
shader_parameter/Time = 0.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6sxne"]
resource_local_to_scene = true
shader = ExtResource("5_oty2a")
shader_parameter/scale = 4.0
shader_parameter/col = Color(0, 1, 1, 1)
shader_parameter/mult = 10.0

[sub_resource type="LabelSettings" id="LabelSettings_6o0bx"]
font = ExtResource("5_tir0a")
font_size = 40

[sub_resource type="RectangleShape2D" id="RectangleShape2D_p3h6d"]
resource_local_to_scene = true
size = Vector2(120, 120)

[node name="MovePlatform" type="CharacterBody2D" node_paths=PackedStringArray("ShaderRect", "MoveSound", "PressedSound", "ReleaseSound", "DebugLabel", "window", "collisionShape", "Texture")]
collision_mask = 5
script = ExtResource("1_xf3iu")
MinMult = 10.0
MaxMult = 1.1
ShaderRect = NodePath("Window/ShaderRect")
MoveSound = NodePath("Sound/Move")
PressedSound = NodePath("Sound/Select")
ReleaseSound = NodePath("Sound/UnSelect")
DebugLabel = NodePath("Window/Label")
window = NodePath("Window")
collisionShape = NodePath("CollisionShape2D")
Texture = NodePath("Window/PlatformTexture")

[node name="Window" type="Window" parent="."]
auto_translate_mode = 1
transparent_bg = true
position = Vector2i(0, 36)
size = Vector2i(120, 120)
transparent = true
sharp_corners = true
script = ExtResource("2_oty2a")

[node name="PlatformTexture" parent="Window" instance=ExtResource("3_xf3iu")]
material = SubResource("ShaderMaterial_tir0a")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_right = 0.0
offset_bottom = 0.0
grow_horizontal = 2
grow_vertical = 2

[node name="ShaderRect" type="ColorRect" parent="Window"]
material = SubResource("ShaderMaterial_6sxne")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -2.0
offset_top = -1.0
offset_right = -2.0
offset_bottom = -1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Label" type="Label" parent="Window"]
visible = false
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -20.0
offset_top = -11.5
offset_right = 20.0
offset_bottom = 11.5
grow_horizontal = 2
grow_vertical = 2
text = "test"
label_settings = SubResource("LabelSettings_6o0bx")
horizontal_alignment = 1
vertical_alignment = 1

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(60, 60)
shape = SubResource("RectangleShape2D_p3h6d")

[node name="Sound" type="Node" parent="."]

[node name="Select" type="AudioStreamPlayer" parent="Sound"]
stream = ExtResource("6_tir0a")
volume_db = -6.0
bus = &"SFX"

[node name="UnSelect" type="AudioStreamPlayer" parent="Sound"]
stream = ExtResource("7_6o0bx")
volume_db = -1.0
bus = &"SFX"

[node name="Move" type="AudioStreamPlayer" parent="Sound"]
stream = ExtResource("8_1dogx")
volume_db = -10.0
bus = &"SFX"
